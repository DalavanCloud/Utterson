#!/bin/bash
# set -e

# Builds a PR based on a message received from SQS

JSON_RESPONSE=$(aws sqs receive-message --queue-url "$QUEUE_URL" --message-attribute-names All)

if [[ -z $JSON_RESPONSE ]]; then
	exit 1
fi

echo "JSON =\n$JSON_RESPONSE"

            PR=$(jq -r '.Messages[0].MessageAttributes.pr.StringValue'   <<< $JSON_RESPONSE)
           URL=$(jq -r '.Messages[0].MessageAttributes.url.StringValue'  <<< $JSON_RESPONSE)
          BASE=$(jq -r '.Messages[0].MessageAttributes.base.StringValue' <<< $JSON_RESPONSE)
   HEAD_BRANCH=$(jq -r '.Messages[0].MessageAttributes["head-branch"]StringValue' <<< $JSON_RESPONSE)
      HEAD_SHA=$(jq -r '.Messages[0].MessageAttributes.head.StringValue' <<< $JSON_RESPONSE)
export    REPO=$(jq -r '.Messages[0].MessageAttributes.repo.StringValue' <<< $JSON_RESPONSE)
RECEIPT_HANDLE=$(jq -r '.Messages[0].ReceiptHandle'                      <<< $JSON_RESPONSE)

URL=$URL BRANCH=$HEAD HEAD=$HEAD_SHA ./github/checks/start

# If there are already any previous results, delete them
if [[ -f results.csv ]]; then
	rm results.csv
fi

# Test the base branch, and the new PR
# Before each build, we lock the message for 20 minutes + 10 seconds
#   (our maximum allowed build time + a grace period)
aws sqs change-message-visibility --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL" --visibility-timeout 1210
REF="$BASE" ./bench
aws sqs change-message-visibility --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL" --visibility-timeout 1210
 PR="$PR"   ./bench

# Now that we are done building, we only need to lock the message for long
# enough to generate our report. If something fails, we want the message to
# quickly make its way back into the queue to try again
aws sqs change-message-visibility --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL" --visibility-timeout 30

# Generate report based on tests
./report

# If everything was successful, we can delete this message from SQS
aws sqs delete-message --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL"

URL=$URL BRANCH=$HEAD HEAD=$HEAD_SHA ./github/checks/complete
